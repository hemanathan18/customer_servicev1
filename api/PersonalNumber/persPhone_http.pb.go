// Code generated by protoc-gen-go-http. DO NOT EDIT.
// versions:
// - protoc-gen-go-http v2.7.3
// - protoc             v5.26.1
// source: persPhone.proto

package PersonalNumber

import (
	context "context"
	http "github.com/go-kratos/kratos/v2/transport/http"
	binding "github.com/go-kratos/kratos/v2/transport/http/binding"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
var _ = new(context.Context)
var _ = binding.EncodeURL

const _ = http.SupportPackageIsVersion1

const OperationPersPhoneServiceCreatePersPhoneNumber = "/PersonalNumber.PersPhoneService/CreatePersPhoneNumber"
const OperationPersPhoneServiceDeletePersPhoneNumber = "/PersonalNumber.PersPhoneService/DeletePersPhoneNumber"
const OperationPersPhoneServiceGetPersPhoneNumber = "/PersonalNumber.PersPhoneService/GetPersPhoneNumber"
const OperationPersPhoneServiceGetPersPhoneNumbers = "/PersonalNumber.PersPhoneService/GetPersPhoneNumbers"
const OperationPersPhoneServiceUpdatePersPhoneNumber = "/PersonalNumber.PersPhoneService/UpdatePersPhoneNumber"

type PersPhoneServiceHTTPServer interface {
	CreatePersPhoneNumber(context.Context, *CreatePersPhoneNumberRequest) (*CreatePersPhoneNumberResponse, error)
	DeletePersPhoneNumber(context.Context, *DeletePersPhoneNumberRequest) (*DeletePersPhoneNumberResponse, error)
	GetPersPhoneNumber(context.Context, *GetPersPhoneNumberRequest) (*GetPersPhoneNumberResponse, error)
	GetPersPhoneNumbers(context.Context, *GetPersPhoneNumbersRequest) (*GetPersPhoneNumbersResponse, error)
	UpdatePersPhoneNumber(context.Context, *UpdatePersPhoneNumberRequest) (*UpdatePersPhoneNumberResponse, error)
}

func RegisterPersPhoneServiceHTTPServer(s *http.Server, srv PersPhoneServiceHTTPServer) {
	r := s.Route("/")
	r.POST("/pers_phonenumbers", _PersPhoneService_CreatePersPhoneNumber0_HTTP_Handler(srv))
	r.GET("/pers_phonenumbers/{pers_ph_id}", _PersPhoneService_GetPersPhoneNumber0_HTTP_Handler(srv))
	r.PUT("/pers_phonenumbers/{pers_ph_id}", _PersPhoneService_UpdatePersPhoneNumber0_HTTP_Handler(srv))
	r.DELETE("/pers_phonenumbers/{pers_ph_id}", _PersPhoneService_DeletePersPhoneNumber0_HTTP_Handler(srv))
	r.GET("/pers_phonenumbers", _PersPhoneService_GetPersPhoneNumbers0_HTTP_Handler(srv))
}

func _PersPhoneService_CreatePersPhoneNumber0_HTTP_Handler(srv PersPhoneServiceHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in CreatePersPhoneNumberRequest
		if err := ctx.Bind(&in.Requestbody); err != nil {
			return err
		}
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationPersPhoneServiceCreatePersPhoneNumber)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.CreatePersPhoneNumber(ctx, req.(*CreatePersPhoneNumberRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*CreatePersPhoneNumberResponse)
		return ctx.Result(200, reply)
	}
}

func _PersPhoneService_GetPersPhoneNumber0_HTTP_Handler(srv PersPhoneServiceHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in GetPersPhoneNumberRequest
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		if err := ctx.BindVars(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationPersPhoneServiceGetPersPhoneNumber)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.GetPersPhoneNumber(ctx, req.(*GetPersPhoneNumberRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*GetPersPhoneNumberResponse)
		return ctx.Result(200, reply)
	}
}

func _PersPhoneService_UpdatePersPhoneNumber0_HTTP_Handler(srv PersPhoneServiceHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in UpdatePersPhoneNumberRequest
		if err := ctx.Bind(&in.Requestbody); err != nil {
			return err
		}
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		if err := ctx.BindVars(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationPersPhoneServiceUpdatePersPhoneNumber)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.UpdatePersPhoneNumber(ctx, req.(*UpdatePersPhoneNumberRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*UpdatePersPhoneNumberResponse)
		return ctx.Result(200, reply)
	}
}

func _PersPhoneService_DeletePersPhoneNumber0_HTTP_Handler(srv PersPhoneServiceHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in DeletePersPhoneNumberRequest
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		if err := ctx.BindVars(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationPersPhoneServiceDeletePersPhoneNumber)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.DeletePersPhoneNumber(ctx, req.(*DeletePersPhoneNumberRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*DeletePersPhoneNumberResponse)
		return ctx.Result(200, reply)
	}
}

func _PersPhoneService_GetPersPhoneNumbers0_HTTP_Handler(srv PersPhoneServiceHTTPServer) func(ctx http.Context) error {
	return func(ctx http.Context) error {
		var in GetPersPhoneNumbersRequest
		if err := ctx.BindQuery(&in); err != nil {
			return err
		}
		http.SetOperation(ctx, OperationPersPhoneServiceGetPersPhoneNumbers)
		h := ctx.Middleware(func(ctx context.Context, req interface{}) (interface{}, error) {
			return srv.GetPersPhoneNumbers(ctx, req.(*GetPersPhoneNumbersRequest))
		})
		out, err := h(ctx, &in)
		if err != nil {
			return err
		}
		reply := out.(*GetPersPhoneNumbersResponse)
		return ctx.Result(200, reply)
	}
}

type PersPhoneServiceHTTPClient interface {
	CreatePersPhoneNumber(ctx context.Context, req *CreatePersPhoneNumberRequest, opts ...http.CallOption) (rsp *CreatePersPhoneNumberResponse, err error)
	DeletePersPhoneNumber(ctx context.Context, req *DeletePersPhoneNumberRequest, opts ...http.CallOption) (rsp *DeletePersPhoneNumberResponse, err error)
	GetPersPhoneNumber(ctx context.Context, req *GetPersPhoneNumberRequest, opts ...http.CallOption) (rsp *GetPersPhoneNumberResponse, err error)
	GetPersPhoneNumbers(ctx context.Context, req *GetPersPhoneNumbersRequest, opts ...http.CallOption) (rsp *GetPersPhoneNumbersResponse, err error)
	UpdatePersPhoneNumber(ctx context.Context, req *UpdatePersPhoneNumberRequest, opts ...http.CallOption) (rsp *UpdatePersPhoneNumberResponse, err error)
}

type PersPhoneServiceHTTPClientImpl struct {
	cc *http.Client
}

func NewPersPhoneServiceHTTPClient(client *http.Client) PersPhoneServiceHTTPClient {
	return &PersPhoneServiceHTTPClientImpl{client}
}

func (c *PersPhoneServiceHTTPClientImpl) CreatePersPhoneNumber(ctx context.Context, in *CreatePersPhoneNumberRequest, opts ...http.CallOption) (*CreatePersPhoneNumberResponse, error) {
	var out CreatePersPhoneNumberResponse
	pattern := "/pers_phonenumbers"
	path := binding.EncodeURL(pattern, in, false)
	opts = append(opts, http.Operation(OperationPersPhoneServiceCreatePersPhoneNumber))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "POST", path, in.Requestbody, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, nil
}

func (c *PersPhoneServiceHTTPClientImpl) DeletePersPhoneNumber(ctx context.Context, in *DeletePersPhoneNumberRequest, opts ...http.CallOption) (*DeletePersPhoneNumberResponse, error) {
	var out DeletePersPhoneNumberResponse
	pattern := "/pers_phonenumbers/{pers_ph_id}"
	path := binding.EncodeURL(pattern, in, true)
	opts = append(opts, http.Operation(OperationPersPhoneServiceDeletePersPhoneNumber))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "DELETE", path, nil, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, nil
}

func (c *PersPhoneServiceHTTPClientImpl) GetPersPhoneNumber(ctx context.Context, in *GetPersPhoneNumberRequest, opts ...http.CallOption) (*GetPersPhoneNumberResponse, error) {
	var out GetPersPhoneNumberResponse
	pattern := "/pers_phonenumbers/{pers_ph_id}"
	path := binding.EncodeURL(pattern, in, true)
	opts = append(opts, http.Operation(OperationPersPhoneServiceGetPersPhoneNumber))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "GET", path, nil, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, nil
}

func (c *PersPhoneServiceHTTPClientImpl) GetPersPhoneNumbers(ctx context.Context, in *GetPersPhoneNumbersRequest, opts ...http.CallOption) (*GetPersPhoneNumbersResponse, error) {
	var out GetPersPhoneNumbersResponse
	pattern := "/pers_phonenumbers"
	path := binding.EncodeURL(pattern, in, true)
	opts = append(opts, http.Operation(OperationPersPhoneServiceGetPersPhoneNumbers))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "GET", path, nil, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, nil
}

func (c *PersPhoneServiceHTTPClientImpl) UpdatePersPhoneNumber(ctx context.Context, in *UpdatePersPhoneNumberRequest, opts ...http.CallOption) (*UpdatePersPhoneNumberResponse, error) {
	var out UpdatePersPhoneNumberResponse
	pattern := "/pers_phonenumbers/{pers_ph_id}"
	path := binding.EncodeURL(pattern, in, false)
	opts = append(opts, http.Operation(OperationPersPhoneServiceUpdatePersPhoneNumber))
	opts = append(opts, http.PathTemplate(pattern))
	err := c.cc.Invoke(ctx, "PUT", path, in.Requestbody, &out, opts...)
	if err != nil {
		return nil, err
	}
	return &out, nil
}
