// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: offPhone.proto

package OfficialNumber

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	OffPhoneService_CreateOffPhoneNumber_FullMethodName = "/OfficialNumber.OffPhoneService/CreateOffPhoneNumber"
	OffPhoneService_GetOffPhoneNumber_FullMethodName    = "/OfficialNumber.OffPhoneService/GetOffPhoneNumber"
	OffPhoneService_UpdateOffPhoneNumber_FullMethodName = "/OfficialNumber.OffPhoneService/UpdateOffPhoneNumber"
	OffPhoneService_DeleteOffPhoneNumber_FullMethodName = "/OfficialNumber.OffPhoneService/DeleteOffPhoneNumber"
	OffPhoneService_GetOffPhoneNumbers_FullMethodName   = "/OfficialNumber.OffPhoneService/GetOffPhoneNumbers"
)

// OffPhoneServiceClient is the client API for OffPhoneService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type OffPhoneServiceClient interface {
	CreateOffPhoneNumber(ctx context.Context, in *CreateOffPhoneNumberRequest, opts ...grpc.CallOption) (*CreateOffPhoneNumberResponse, error)
	GetOffPhoneNumber(ctx context.Context, in *GetOffPhoneNumberRequest, opts ...grpc.CallOption) (*GetOffPhoneNumberResponse, error)
	UpdateOffPhoneNumber(ctx context.Context, in *UpdateOffPhoneNumberRequest, opts ...grpc.CallOption) (*UpdateOffPhoneNumberResponse, error)
	DeleteOffPhoneNumber(ctx context.Context, in *DeleteOffPhoneNumberRequest, opts ...grpc.CallOption) (*DeleteOffPhoneNumberResponse, error)
	GetOffPhoneNumbers(ctx context.Context, in *GetOffPhoneNumbersRequest, opts ...grpc.CallOption) (*GetOffPhoneNumbersResponse, error)
}

type offPhoneServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOffPhoneServiceClient(cc grpc.ClientConnInterface) OffPhoneServiceClient {
	return &offPhoneServiceClient{cc}
}

func (c *offPhoneServiceClient) CreateOffPhoneNumber(ctx context.Context, in *CreateOffPhoneNumberRequest, opts ...grpc.CallOption) (*CreateOffPhoneNumberResponse, error) {
	out := new(CreateOffPhoneNumberResponse)
	err := c.cc.Invoke(ctx, OffPhoneService_CreateOffPhoneNumber_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offPhoneServiceClient) GetOffPhoneNumber(ctx context.Context, in *GetOffPhoneNumberRequest, opts ...grpc.CallOption) (*GetOffPhoneNumberResponse, error) {
	out := new(GetOffPhoneNumberResponse)
	err := c.cc.Invoke(ctx, OffPhoneService_GetOffPhoneNumber_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offPhoneServiceClient) UpdateOffPhoneNumber(ctx context.Context, in *UpdateOffPhoneNumberRequest, opts ...grpc.CallOption) (*UpdateOffPhoneNumberResponse, error) {
	out := new(UpdateOffPhoneNumberResponse)
	err := c.cc.Invoke(ctx, OffPhoneService_UpdateOffPhoneNumber_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offPhoneServiceClient) DeleteOffPhoneNumber(ctx context.Context, in *DeleteOffPhoneNumberRequest, opts ...grpc.CallOption) (*DeleteOffPhoneNumberResponse, error) {
	out := new(DeleteOffPhoneNumberResponse)
	err := c.cc.Invoke(ctx, OffPhoneService_DeleteOffPhoneNumber_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *offPhoneServiceClient) GetOffPhoneNumbers(ctx context.Context, in *GetOffPhoneNumbersRequest, opts ...grpc.CallOption) (*GetOffPhoneNumbersResponse, error) {
	out := new(GetOffPhoneNumbersResponse)
	err := c.cc.Invoke(ctx, OffPhoneService_GetOffPhoneNumbers_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OffPhoneServiceServer is the server API for OffPhoneService service.
// All implementations must embed UnimplementedOffPhoneServiceServer
// for forward compatibility
type OffPhoneServiceServer interface {
	CreateOffPhoneNumber(context.Context, *CreateOffPhoneNumberRequest) (*CreateOffPhoneNumberResponse, error)
	GetOffPhoneNumber(context.Context, *GetOffPhoneNumberRequest) (*GetOffPhoneNumberResponse, error)
	UpdateOffPhoneNumber(context.Context, *UpdateOffPhoneNumberRequest) (*UpdateOffPhoneNumberResponse, error)
	DeleteOffPhoneNumber(context.Context, *DeleteOffPhoneNumberRequest) (*DeleteOffPhoneNumberResponse, error)
	GetOffPhoneNumbers(context.Context, *GetOffPhoneNumbersRequest) (*GetOffPhoneNumbersResponse, error)
	mustEmbedUnimplementedOffPhoneServiceServer()
}

// UnimplementedOffPhoneServiceServer must be embedded to have forward compatible implementations.
type UnimplementedOffPhoneServiceServer struct {
}

func (UnimplementedOffPhoneServiceServer) CreateOffPhoneNumber(context.Context, *CreateOffPhoneNumberRequest) (*CreateOffPhoneNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOffPhoneNumber not implemented")
}
func (UnimplementedOffPhoneServiceServer) GetOffPhoneNumber(context.Context, *GetOffPhoneNumberRequest) (*GetOffPhoneNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOffPhoneNumber not implemented")
}
func (UnimplementedOffPhoneServiceServer) UpdateOffPhoneNumber(context.Context, *UpdateOffPhoneNumberRequest) (*UpdateOffPhoneNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOffPhoneNumber not implemented")
}
func (UnimplementedOffPhoneServiceServer) DeleteOffPhoneNumber(context.Context, *DeleteOffPhoneNumberRequest) (*DeleteOffPhoneNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOffPhoneNumber not implemented")
}
func (UnimplementedOffPhoneServiceServer) GetOffPhoneNumbers(context.Context, *GetOffPhoneNumbersRequest) (*GetOffPhoneNumbersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOffPhoneNumbers not implemented")
}
func (UnimplementedOffPhoneServiceServer) mustEmbedUnimplementedOffPhoneServiceServer() {}

// UnsafeOffPhoneServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to OffPhoneServiceServer will
// result in compilation errors.
type UnsafeOffPhoneServiceServer interface {
	mustEmbedUnimplementedOffPhoneServiceServer()
}

func RegisterOffPhoneServiceServer(s grpc.ServiceRegistrar, srv OffPhoneServiceServer) {
	s.RegisterService(&OffPhoneService_ServiceDesc, srv)
}

func _OffPhoneService_CreateOffPhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOffPhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffPhoneServiceServer).CreateOffPhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OffPhoneService_CreateOffPhoneNumber_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffPhoneServiceServer).CreateOffPhoneNumber(ctx, req.(*CreateOffPhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffPhoneService_GetOffPhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOffPhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffPhoneServiceServer).GetOffPhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OffPhoneService_GetOffPhoneNumber_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffPhoneServiceServer).GetOffPhoneNumber(ctx, req.(*GetOffPhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffPhoneService_UpdateOffPhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOffPhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffPhoneServiceServer).UpdateOffPhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OffPhoneService_UpdateOffPhoneNumber_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffPhoneServiceServer).UpdateOffPhoneNumber(ctx, req.(*UpdateOffPhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffPhoneService_DeleteOffPhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOffPhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffPhoneServiceServer).DeleteOffPhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OffPhoneService_DeleteOffPhoneNumber_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffPhoneServiceServer).DeleteOffPhoneNumber(ctx, req.(*DeleteOffPhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OffPhoneService_GetOffPhoneNumbers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOffPhoneNumbersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OffPhoneServiceServer).GetOffPhoneNumbers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: OffPhoneService_GetOffPhoneNumbers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OffPhoneServiceServer).GetOffPhoneNumbers(ctx, req.(*GetOffPhoneNumbersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// OffPhoneService_ServiceDesc is the grpc.ServiceDesc for OffPhoneService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var OffPhoneService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "OfficialNumber.OffPhoneService",
	HandlerType: (*OffPhoneServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOffPhoneNumber",
			Handler:    _OffPhoneService_CreateOffPhoneNumber_Handler,
		},
		{
			MethodName: "GetOffPhoneNumber",
			Handler:    _OffPhoneService_GetOffPhoneNumber_Handler,
		},
		{
			MethodName: "UpdateOffPhoneNumber",
			Handler:    _OffPhoneService_UpdateOffPhoneNumber_Handler,
		},
		{
			MethodName: "DeleteOffPhoneNumber",
			Handler:    _OffPhoneService_DeleteOffPhoneNumber_Handler,
		},
		{
			MethodName: "GetOffPhoneNumbers",
			Handler:    _OffPhoneService_GetOffPhoneNumbers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "offPhone.proto",
}
